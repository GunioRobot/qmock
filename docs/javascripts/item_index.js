if (!window.PDoc) window.PDoc = {};
PDoc.elements = {
  'QMock section': { 'name': 'QMock section', 'type': 'section', 'path': 'qmock/' },
'QMock.create': { 'name': 'QMock.create', 'type': 'class method', 'path': 'qmock/qmock/create/' },
'Config section': { 'name': 'Config section', 'type': 'section', 'path': 'config/' },
'Config': { 'name': 'Config', 'type': 'namespace', 'path': 'config/config/' },
'Config.failSlow': { 'name': 'Config.failSlow', 'type': 'class property', 'path': 'config/config/failslow/' },
'Config.compare': { 'name': 'Config.compare', 'type': 'class property', 'path': 'config/config/compare/' },
'QMock.is': { 'name': 'QMock.is', 'type': 'class method', 'path': 'qmock/qmock/is/' },
'QMock.isNot': { 'name': 'QMock.isNot', 'type': 'class method', 'path': 'qmock/qmock/isnot/' },
'QMock.testParameters': { 'name': 'QMock.testParameters', 'type': 'class method', 'path': 'qmock/qmock/testparameters/' },
'Mock#_getState': { 'name': 'Mock#_getState', 'type': 'instance method', 'path': 'mock/mock/prototype/_getstate/' },
'QMock.verifyInvocations': { 'name': 'QMock.verifyInvocations', 'type': 'class method', 'path': 'qmock/qmock/verifyinvocations/' },
'QMock.verifyOverloading': { 'name': 'QMock.verifyOverloading', 'type': 'class method', 'path': 'qmock/qmock/verifyoverloading/' },
'QMock.verifyPresentation': { 'name': 'QMock.verifyPresentation', 'type': 'class method', 'path': 'qmock/qmock/verifypresentation/' },
'QMock.verifyInterface': { 'name': 'QMock.verifyInterface', 'type': 'class method', 'path': 'qmock/qmock/verifyinterface/' },
'QMock.verifyReceiver': { 'name': 'QMock.verifyReceiver', 'type': 'class method', 'path': 'qmock/qmock/verifyreceiver/' },
'QMock.resetMock': { 'name': 'QMock.resetMock', 'type': 'class method', 'path': 'qmock/qmock/resetmock/' },
'Mock section': { 'name': 'Mock section', 'type': 'section', 'path': 'mock/' },
'Mock': { 'name': 'Mock', 'type': 'class', 'path': 'mock/mock/' },
'Mock#id': { 'name': 'Mock#id', 'type': 'instance method', 'path': 'mock/mock/prototype/id/' },
'Mock#method': { 'name': 'Mock#method', 'type': 'instance method', 'path': 'mock/mock/prototype/method/' },
'Mock#receives': { 'name': 'Mock#receives', 'type': 'instance method', 'path': 'mock/mock/prototype/receives/' },
'Mock#accepts': { 'name': 'Mock#accepts', 'type': 'instance method', 'path': 'mock/mock/prototype/accepts/' },
'Mock#returns': { 'name': 'Mock#returns', 'type': 'instance method', 'path': 'mock/mock/prototype/returns/' },
'Mock#required': { 'name': 'Mock#required', 'type': 'instance method', 'path': 'mock/mock/prototype/required/' },
'Mock#overload': { 'name': 'Mock#overload', 'type': 'instance method', 'path': 'mock/mock/prototype/overload/' },
'Mock#data': { 'name': 'Mock#data', 'type': 'instance method', 'path': 'mock/mock/prototype/data/' },
'Mock#property': { 'name': 'Mock#property', 'type': 'instance method', 'path': 'mock/mock/prototype/property/' },
'Mock#andExpects': { 'name': 'Mock#andExpects', 'type': 'instance method', 'path': 'mock/mock/prototype/andexpects/' },
'Mock#reset': { 'name': 'Mock#reset', 'type': 'instance method', 'path': 'mock/mock/prototype/reset/' },
'Mock#verify': { 'name': 'Mock#verify', 'type': 'instance method', 'path': 'mock/mock/prototype/verify/' },
'Mock#atLeast': { 'name': 'Mock#atLeast', 'type': 'instance method', 'path': 'mock/mock/prototype/atleast/' },
'Mock#noMoreThan': { 'name': 'Mock#noMoreThan', 'type': 'instance method', 'path': 'mock/mock/prototype/nomorethan/' },
'Mock#calls': { 'name': 'Mock#calls', 'type': 'instance method', 'path': 'mock/mock/prototype/calls/' },
'Mock#end': { 'name': 'Mock#end', 'type': 'instance method', 'path': 'mock/mock/prototype/end/' },
'Mock#interface': { 'name': 'Mock#interface', 'type': 'instance method', 'path': 'mock/mock/prototype/interface/' },
'new Mock': { 'name': 'new Mock', 'type': 'constructor', 'path': 'mock/mock/new/' },
'Mock#expects': { 'name': 'Mock#expects', 'type': 'instance method', 'path': 'mock/mock/prototype/expects/' },
'Mock#_getExceptions': { 'name': 'Mock#_getExceptions', 'type': 'instance method', 'path': 'mock/mock/prototype/_getexceptions/' },
'QMock': { 'name': 'QMock', 'type': 'class', 'path': 'qmock/qmock/' },
'QMock.config': { 'name': 'QMock.config', 'type': 'class property', 'path': 'qmock/qmock/config/' },
'QMock.Mock': { 'name': 'QMock.Mock', 'type': 'class method', 'path': 'qmock/qmock/mock/' }
};